[{"D:\\Installed apps\\React\\confusion\\src\\components\\DishdetailComponent.js":"1","D:\\Installed apps\\React\\confusion\\src\\index.js":"2","D:\\Installed apps\\React\\confusion\\src\\App.js":"3","D:\\Installed apps\\React\\confusion\\src\\components\\MenuComponent.js":"4","D:\\Installed apps\\React\\confusion\\src\\components\\MainComponent.js":"5","D:\\Installed apps\\React\\confusion\\src\\shared\\dishes.js":"6","D:\\Installed apps\\React\\confusion\\src\\components\\FooterComponent.js":"7","D:\\Installed apps\\React\\confusion\\src\\components\\HomeComponent.js":"8","D:\\Installed apps\\React\\confusion\\src\\components\\HeaderComponent.js":"9","D:\\Installed apps\\React\\confusion\\src\\reportWebVitals.js":"10","D:\\Installed apps\\React\\confusion\\src\\components\\ContactComponent.js":"11","D:\\Installed apps\\React\\confusion\\src\\shared\\leaders.js":"12","D:\\Installed apps\\React\\confusion\\src\\shared\\promotions.js":"13","D:\\Installed apps\\React\\confusion\\src\\components\\AboutComponent.js":"14","D:\\Installed apps\\React\\confusion\\src\\shared\\comments.js":"15","D:\\Installed apps\\React\\confusion\\src\\redux\\promotions.js":"16","D:\\Installed apps\\React\\confusion\\src\\redux\\leaders.js":"17","D:\\Installed apps\\React\\confusion\\src\\redux\\configureStore.js":"18","D:\\Installed apps\\React\\confusion\\src\\redux\\dishes.js":"19","D:\\Installed apps\\React\\confusion\\src\\redux\\comments.js":"20","D:\\Installed apps\\React\\confusion\\src\\redux\\ActionTypes.js":"21","D:\\Installed apps\\React\\confusion\\src\\redux\\ActionCreators.js":"22","D:\\Installed apps\\React\\confusion\\src\\components\\LoadingComponent.js":"23"},{"size":7165,"mtime":1609668177533,"results":"24","hashOfConfig":"25"},{"size":639,"mtime":1608484203225,"results":"26","hashOfConfig":"25"},{"size":530,"mtime":1608964543713,"results":"27","hashOfConfig":"25"},{"size":2161,"mtime":1609223003070,"results":"28","hashOfConfig":"25"},{"size":3580,"mtime":1610901012399,"results":"29","hashOfConfig":"25"},{"size":1490,"mtime":1608649861801,"results":"30","hashOfConfig":"25"},{"size":2648,"mtime":1608736535866,"results":"31","hashOfConfig":"25"},{"size":1745,"mtime":1609668122378,"results":"32","hashOfConfig":"25"},{"size":4422,"mtime":1609139980038,"results":"33","hashOfConfig":"25"},{"size":362,"mtime":1607844298393,"results":"34","hashOfConfig":"25"},{"size":11112,"mtime":1609510224906,"results":"35","hashOfConfig":"25"},{"size":2382,"mtime":1608647843605,"results":"36","hashOfConfig":"25"},{"size":445,"mtime":1608647834590,"results":"37","hashOfConfig":"25"},{"size":4359,"mtime":1608781065305,"results":"38","hashOfConfig":"25"},{"size":4279,"mtime":1608647850308,"results":"39","hashOfConfig":"25"},{"size":630,"mtime":1609667223285,"results":"40","hashOfConfig":"25"},{"size":185,"mtime":1609143988483,"results":"41","hashOfConfig":"25"},{"size":801,"mtime":1609505744118,"results":"42","hashOfConfig":"25"},{"size":624,"mtime":1609667236290,"results":"43","hashOfConfig":"25"},{"size":803,"mtime":1609666994398,"results":"44","hashOfConfig":"25"},{"size":410,"mtime":1609665229402,"results":"45","hashOfConfig":"25"},{"size":4466,"mtime":1610896867762,"results":"46","hashOfConfig":"25"},{"size":252,"mtime":1609219777789,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},"15m2a0p",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"67"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Installed apps\\React\\confusion\\src\\components\\DishdetailComponent.js",["103","104","105"],"import React, { Component } from 'react';\r\nimport {Card, CardImg,  CardText, CardBody, CardTitle,BreadcrumbItem,Breadcrumb,Button, Modal, ModalHeader, ModalBody, Label, Row} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport {Loading} from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length<= len);\r\nconst minLength = (len) => (val) => (val) && (val.length >= len);\r\n\r\nclass CommentForm extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = { \r\n          isModalOpen : false\r\n        };\r\n\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    toggleModal(){\r\n        this.setState({\r\n          isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleSubmit(values){\r\n        this.toggleModal();\r\n        this.props.addComment(this.props.dishId, values.rating, values.author, values.comment);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n        <React.Fragment>\r\n          <Button outline onClick={this.toggleModal}><span className=\"fa fa-pencil fa-lg\"></span> Submit Comment</Button>\r\n          <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n            <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n            <ModalBody className=\"mt-0 m-3\">\r\n                <LocalForm onSubmit = {(values)=> this.handleSubmit(values)}>\r\n                    <Row className=\"form-group\">\r\n                    <Label htmlFor=\"rating\" >Rating</Label>\r\n                        <Control.select model=\".rating\" name=\"rating\"\r\n                            className=\"form-control\">\r\n                            <option>1</option>\r\n                            <option>2</option>\r\n                            <option>3</option>\r\n                            <option>4</option>\r\n                            <option>5</option>\r\n                        </Control.select>\r\n                    </Row>\r\n                    <Row className=\"form-group\">\r\n                        <Label htmlFor=\"author\">Author</Label>\r\n                        <Control.text model=\".author\" id=\"author\" name=\"author\"\r\n                            placeholder=\"Your Name\"\r\n                            className=\"form-control\"\r\n                            validators={{\r\n                                required, minLength:minLength(3), maxLength:maxLength(15)\r\n                            }}\r\n                        />\r\n                        <Errors\r\n                            className=\"text-danger\"\r\n                            model=\".author\"\r\n                            show=\"touched\"\r\n                            messages= {{\r\n                                required:'Required ',\r\n                                minLength: 'Must be greater than 2 characters ',\r\n                                maxLength: 'Must be 15 character or less '\r\n                            }}\r\n                        />\r\n                    </Row>\r\n                    <Row className=\"form-group\">\r\n                        <Label htmlFor=\"comment\">Comment</Label>\r\n                        <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\r\n                            rows=\"6\"\r\n                            className=\"form-control\"/>\r\n                    </Row>\r\n                    <Row className=\"form-group\">\r\n                        <Button type=\"submit\" value=\"submit\" color=\"primary\" >\r\n                            Submit\r\n                        </Button>\r\n                    </Row>\r\n                </LocalForm>\r\n            </ModalBody>\r\n          </Modal>\r\n          </React.Fragment>\r\n        );\r\n      }\r\n    }\r\n\r\n    function RenderDish({dish}) {\r\n        return (\r\n            <div className=\"col-12 col-md-5 m-1\">\r\n                <Card>\r\n                    <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                    <CardBody>\r\n                    <CardTitle heading>{dish.name}</CardTitle>\r\n                    <CardText>{dish.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    function RenderComments({comments,addComment,dishId}) {\r\n        if(comments != null)\r\n        {\r\n            return (\r\n                <div className=\"col-12 col-md-5 m-1\">\r\n                    <h4>Comments</h4>\r\n                    <ul className = \"list-unstyled\">\r\n                        {comments.map((comment) => {\r\n                                return (\r\n                                    <li key={comment.id}>\r\n                                        <p>{comment.comment}</p>\r\n                                        <p>--{comment.author}, {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}</p>\r\n                                    </li>\r\n                                );\r\n                            })} \r\n                    </ul>\r\n                    <br/>\r\n                    <CommentForm dishId={dishId}  addComment={addComment}\r\n                    /> \r\n                </div>\r\n            );\r\n        }        \r\n        else\r\n        {\r\n            return(\r\n                <div></div>\r\n            )\r\n        }\r\n    }\r\n\r\n    const DishDetail = (props) => {\r\n        if(props.Loading){\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Loading/>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if(props.errMess){\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <h4>{props.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if(props.dish !=null){\r\n            return (\r\n                <div className=\"container\">\r\n                     <div className=\"row\">\r\n                        <Breadcrumb>\r\n                           <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n                           <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <div className=\"col-12\">\r\n                            <h3>{props.dish.name}</h3>\r\n                            <hr />\r\n                        </div>                \r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <RenderDish dish = {props.dish} />  \r\n                        <RenderComments comments = {props.comments} \r\n                           addComment={props.addComment}\r\n                           dishId ={props.dish.id}\r\n                        />\r\n                    </div>     \r\n                </div>\r\n            );\r\n        }\r\n        else\r\n        {\r\n            return(\r\n                <div></div>\r\n            );\r\n        }\r\n    }\r\n\r\nexport default DishDetail;",["106","107"],"D:\\Installed apps\\React\\confusion\\src\\index.js",[],["108","109"],"D:\\Installed apps\\React\\confusion\\src\\App.js",[],["110","111"],"D:\\Installed apps\\React\\confusion\\src\\components\\MenuComponent.js",[],"D:\\Installed apps\\React\\confusion\\src\\components\\MainComponent.js",["112"],"D:\\Installed apps\\React\\confusion\\src\\shared\\dishes.js",[],["113","114"],"D:\\Installed apps\\React\\confusion\\src\\components\\FooterComponent.js",[],["115","116"],"D:\\Installed apps\\React\\confusion\\src\\components\\HomeComponent.js",[],"D:\\Installed apps\\React\\confusion\\src\\components\\HeaderComponent.js",[],["117","118"],"D:\\Installed apps\\React\\confusion\\src\\reportWebVitals.js",[],["119","120"],"D:\\Installed apps\\React\\confusion\\src\\components\\ContactComponent.js",["121","122","123","124","125","126","127","128"],"import React, {Component} from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row } from 'reactstrap';\r\nimport { Control, Form, Errors, actions} from 'react-redux-form';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length<= len);\r\nconst minLength = (len) => (val) => (val) && (val.length >= len);\r\nconst isNumber = (val) =>!isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(values){\r\n        console.log('Current State is: ' + JSON.stringify(values));\r\n        alert('Current State is: ' + JSON.stringify(values));\r\n        this.props.resetFeedbackForm();\r\n    }\r\n\r\n    render()\r\n    {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>                \r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\" href=\"skype.com\" ><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className = \"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3> Send us your feedback </h3>\r\n                    </div>\r\n                    <div className = \"col-12 col-md-9\">\r\n                        <Form model=\"feedback\" onSubmit = {(values)=> this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength:minLength(3), maxLength:maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                       className=\"text-danger\"\r\n                                       model=\".firstname\"\r\n                                       show=\"touched\"\r\n                                       messages= {{\r\n                                           required:'Required   ',\r\n                                           minLength: 'Must be greater than 2 characters   ',\r\n                                           maxLength: 'Must be 15 character or less   '\r\n                                       }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength:minLength(3), maxLength:maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                       className=\"text-danger\"\r\n                                       model=\".lastname\"\r\n                                       show=\"touched\"\r\n                                       messages= {{\r\n                                           required:'Required   ',\r\n                                           minLength: 'Must be greater than 2 characters   ',\r\n                                           maxLength: 'Must be 15 character or less   '\r\n                                       }}\r\n                                     />                                     \r\n                                </Col>                        \r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                            <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. number\"\r\n                                        className = \"form-control\"\r\n                                        validators={{\r\n                                            required, minLength:minLength(3), maxLength:maxLength(15),isNumber\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                       className=\"text-danger\"\r\n                                       model=\".telnum\"\r\n                                       show=\"touched\"\r\n                                       messages= {{\r\n                                           required:'Required   ',\r\n                                           minLength: 'Must be greater than 2 numbers   ',\r\n                                           maxLength: 'Must be 15 numbers or less   ',\r\n                                           isNumber:  'Must  be a number  '\r\n                                       }}\r\n                                     />                                   \r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className = \"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                       className=\"text-danger\"\r\n                                       model=\".email\"\r\n                                       show=\"touched\"\r\n                                       messages= {{\r\n                                           required:'Required   ',\r\n                                           validEmail: 'Invalid Email Address   '\r\n                                       }}\r\n                                     />                        \r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\"\r\n                                                name=\"agree\"\r\n                                                className=\"form-check-imput\"\r\n                                                /> {' '}\r\n                                            <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\"/>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","D:\\Installed apps\\React\\confusion\\src\\shared\\leaders.js",[],"D:\\Installed apps\\React\\confusion\\src\\shared\\promotions.js",[],"D:\\Installed apps\\React\\confusion\\src\\components\\AboutComponent.js",[],"D:\\Installed apps\\React\\confusion\\src\\shared\\comments.js",[],"D:\\Installed apps\\React\\confusion\\src\\redux\\promotions.js",[],"D:\\Installed apps\\React\\confusion\\src\\redux\\leaders.js",[],"D:\\Installed apps\\React\\confusion\\src\\redux\\configureStore.js",[],"D:\\Installed apps\\React\\confusion\\src\\redux\\dishes.js",[],"D:\\Installed apps\\React\\confusion\\src\\redux\\comments.js",["129"],"D:\\Installed apps\\React\\confusion\\src\\redux\\ActionTypes.js",[],"D:\\Installed apps\\React\\confusion\\src\\redux\\ActionCreators.js",["130"],"D:\\Installed apps\\React\\confusion\\src\\components\\LoadingComponent.js",[],{"ruleId":"131","severity":1,"message":"132","line":45,"column":25,"nodeType":"133","endLine":46,"endColumn":54},{"ruleId":"131","severity":1,"message":"134","line":56,"column":25,"nodeType":"133","endLine":62,"endColumn":27},{"ruleId":"131","severity":1,"message":"135","line":76,"column":25,"nodeType":"133","endLine":78,"endColumn":55},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","replacedBy":"139"},{"ruleId":"136","replacedBy":"140"},{"ruleId":"138","replacedBy":"141"},{"ruleId":"136","replacedBy":"142"},{"ruleId":"138","replacedBy":"143"},{"ruleId":"144","severity":1,"message":"145","line":35,"column":3,"nodeType":"146","messageId":"147","endLine":37,"endColumn":4},{"ruleId":"136","replacedBy":"148"},{"ruleId":"138","replacedBy":"149"},{"ruleId":"136","replacedBy":"150"},{"ruleId":"138","replacedBy":"151"},{"ruleId":"136","replacedBy":"152"},{"ruleId":"138","replacedBy":"153"},{"ruleId":"136","replacedBy":"154"},{"ruleId":"138","replacedBy":"155"},{"ruleId":"156","severity":1,"message":"157","line":3,"column":33,"nodeType":"158","messageId":"159","endLine":3,"endColumn":40},{"ruleId":"131","severity":1,"message":"134","line":74,"column":37,"nodeType":"133","endLine":80,"endColumn":39},{"ruleId":"131","severity":1,"message":"134","line":96,"column":37,"nodeType":"133","endLine":102,"endColumn":39},{"ruleId":"131","severity":1,"message":"134","line":118,"column":37,"nodeType":"133","endLine":124,"endColumn":39},{"ruleId":"131","severity":1,"message":"134","line":141,"column":37,"nodeType":"133","endLine":147,"endColumn":39},{"ruleId":"131","severity":1,"message":"160","line":163,"column":45,"nodeType":"133","endLine":166,"endColumn":51},{"ruleId":"131","severity":1,"message":"132","line":172,"column":37,"nodeType":"133","endLine":173,"endColumn":66},{"ruleId":"131","severity":1,"message":"135","line":182,"column":37,"nodeType":"133","endLine":184,"endColumn":67},{"ruleId":"156","severity":1,"message":"161","line":1,"column":10,"nodeType":"158","messageId":"159","endLine":1,"endColumn":18},{"ruleId":"156","severity":1,"message":"162","line":2,"column":10,"nodeType":"158","messageId":"159","endLine":2,"endColumn":16},"react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","no-native-reassign",["163"],"no-negated-in-lhs",["164"],["163"],["164"],["163"],["164"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",["163"],["164"],["163"],["164"],["163"],["164"],["163"],["164"],"no-unused-vars","'actions' is defined but never used.","Identifier","unusedVar","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE","'COMMENTS' is defined but never used.","'DISHES' is defined but never used.","no-global-assign","no-unsafe-negation"]